{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "88df9a22",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "baba573a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Input file with n customers\n",
    "\n",
    "df = pd.read_csv(\"150k.csv\")\n",
    "n=len(df.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f1fe0b57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer Number</th>\n",
       "      <th>Optimal number to process</th>\n",
       "      <th>Square footage utilized</th>\n",
       "      <th>Profit</th>\n",
       "      <th>Penalty</th>\n",
       "      <th>Minimum</th>\n",
       "      <th>Maximum</th>\n",
       "      <th>Total Profit</th>\n",
       "      <th>Total Penalty</th>\n",
       "      <th>Net Profit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>5.39</td>\n",
       "      <td>1.47</td>\n",
       "      <td>10</td>\n",
       "      <td>551</td>\n",
       "      <td>53.90</td>\n",
       "      <td>795.27</td>\n",
       "      <td>-741.37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>4.47</td>\n",
       "      <td>1.73</td>\n",
       "      <td>10</td>\n",
       "      <td>556</td>\n",
       "      <td>44.70</td>\n",
       "      <td>944.58</td>\n",
       "      <td>-899.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>576.0</td>\n",
       "      <td>720.00</td>\n",
       "      <td>5.83</td>\n",
       "      <td>1.40</td>\n",
       "      <td>10</td>\n",
       "      <td>576</td>\n",
       "      <td>3358.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3358.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>5.52</td>\n",
       "      <td>1.17</td>\n",
       "      <td>10</td>\n",
       "      <td>1163</td>\n",
       "      <td>55.20</td>\n",
       "      <td>1349.01</td>\n",
       "      <td>-1293.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1405.0</td>\n",
       "      <td>1756.25</td>\n",
       "      <td>5.93</td>\n",
       "      <td>1.55</td>\n",
       "      <td>10</td>\n",
       "      <td>1405</td>\n",
       "      <td>8331.65</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8331.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149995</th>\n",
       "      <td>149996</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>5.52</td>\n",
       "      <td>1.31</td>\n",
       "      <td>10</td>\n",
       "      <td>974</td>\n",
       "      <td>55.20</td>\n",
       "      <td>1262.84</td>\n",
       "      <td>-1207.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149996</th>\n",
       "      <td>149997</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>5.11</td>\n",
       "      <td>1.71</td>\n",
       "      <td>10</td>\n",
       "      <td>849</td>\n",
       "      <td>51.10</td>\n",
       "      <td>1434.69</td>\n",
       "      <td>-1383.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149997</th>\n",
       "      <td>149998</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>5.14</td>\n",
       "      <td>1.57</td>\n",
       "      <td>10</td>\n",
       "      <td>1442</td>\n",
       "      <td>51.40</td>\n",
       "      <td>2248.24</td>\n",
       "      <td>-2196.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149998</th>\n",
       "      <td>149999</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>4.13</td>\n",
       "      <td>1.07</td>\n",
       "      <td>10</td>\n",
       "      <td>826</td>\n",
       "      <td>41.30</td>\n",
       "      <td>873.12</td>\n",
       "      <td>-831.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149999</th>\n",
       "      <td>150000</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>4.63</td>\n",
       "      <td>0.86</td>\n",
       "      <td>10</td>\n",
       "      <td>1877</td>\n",
       "      <td>46.30</td>\n",
       "      <td>1605.62</td>\n",
       "      <td>-1559.32</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>150000 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Customer Number  Optimal number to process  Square footage utilized  \\\n",
       "0                     1                       10.0                    12.50   \n",
       "1                     2                       10.0                    12.50   \n",
       "2                     3                      576.0                   720.00   \n",
       "3                     4                       10.0                    12.50   \n",
       "4                     5                     1405.0                  1756.25   \n",
       "...                 ...                        ...                      ...   \n",
       "149995           149996                       10.0                    12.50   \n",
       "149996           149997                       10.0                    12.50   \n",
       "149997           149998                       10.0                    12.50   \n",
       "149998           149999                       10.0                    12.50   \n",
       "149999           150000                       10.0                    12.50   \n",
       "\n",
       "        Profit  Penalty  Minimum  Maximum  Total Profit  Total Penalty  \\\n",
       "0         5.39     1.47       10      551         53.90         795.27   \n",
       "1         4.47     1.73       10      556         44.70         944.58   \n",
       "2         5.83     1.40       10      576       3358.08           0.00   \n",
       "3         5.52     1.17       10     1163         55.20        1349.01   \n",
       "4         5.93     1.55       10     1405       8331.65           0.00   \n",
       "...        ...      ...      ...      ...           ...            ...   \n",
       "149995    5.52     1.31       10      974         55.20        1262.84   \n",
       "149996    5.11     1.71       10      849         51.10        1434.69   \n",
       "149997    5.14     1.57       10     1442         51.40        2248.24   \n",
       "149998    4.13     1.07       10      826         41.30         873.12   \n",
       "149999    4.63     0.86       10     1877         46.30        1605.62   \n",
       "\n",
       "        Net Profit  \n",
       "0          -741.37  \n",
       "1          -899.88  \n",
       "2          3358.08  \n",
       "3         -1293.81  \n",
       "4          8331.65  \n",
       "...            ...  \n",
       "149995    -1207.64  \n",
       "149996    -1383.59  \n",
       "149997    -2196.84  \n",
       "149998     -831.82  \n",
       "149999    -1559.32  \n",
       "\n",
       "[150000 rows x 10 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "95154ba2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Add a greedy ratio metric as a column\n",
    "df['ratio']=((df['Profit']-df['Penalty'])*((df['Penalty'])**0.5)/(df['Profit']))\n",
    "df.sort_values('ratio', ascending = False, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "24f2449b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Add a column for optimal number to process and starting the count at 10\n",
    "df['Optimal to process']=10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0456d16c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "$ 22024661.579996556\n"
     ]
    }
   ],
   "source": [
    "#Iterate through the dataframe to set optimal values for each row and keep track of net profits and penalties\n",
    "\n",
    "Totalprofit=df.Profit.sum()*10\n",
    "Totalpenalty=0\n",
    "Totalprocessed=df.Minimum.sum()\n",
    "capprocessed=(300*n)/1.25\n",
    "\n",
    "for index, row in df.iterrows():\n",
    "    #if the total processed count is lower than the maximum cap, then the Maximum count for the customer will be processed\n",
    "    if Totalprocessed < capprocessed:\n",
    "        Totalprofit+=row['Profit']*(row['Maximum']-10)\n",
    "        Totalprocessed+=row[\"Maximum\"]-10\n",
    "        df.at[index,'Optimal to process']=row[\"Maximum\"]\n",
    "        \n",
    "        #the first time the count goes over the cap, reduce to meet the cap and apply penalties for the gap.\n",
    "        if Totalprocessed > capprocessed:\n",
    "            Totalprofit-=row['Profit']*(Totalprocessed-capprocessed)\n",
    "            Totalpenalty+=row['Penalty']*(Totalprocessed-capprocessed)\n",
    "            df.at[index,'Optimal to process']=row['Maximum']-(Totalprocessed-capprocessed)\n",
    "            Totalprocessed = capprocessed\n",
    "            \n",
    "    #Otherwise, if the processed count is over the cap, then stop processing any more and penalties are counted for leftover   \n",
    "    elif Totalprocessed >= capprocessed:\n",
    "        Totalpenalty+=row['Penalty']*(row['Maximum']-10)\n",
    "        df.at[index,'Optimal to process']=row['Minimum']\n",
    "        \n",
    "Totalrevenue=Totalprofit-Totalpenalty\n",
    "\n",
    "print(\"$\",Totalrevenue)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "24571773",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Efficiency of ratio: 0.3251620125317555\n"
     ]
    }
   ],
   "source": [
    "print(\"Efficiency of ratio:\",Totalrevenue /67734423.86)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "030de269",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv('ratio2.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c0bfd890",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer Number</th>\n",
       "      <th>Optimal number to process</th>\n",
       "      <th>Square footage utilized</th>\n",
       "      <th>Profit</th>\n",
       "      <th>Penalty</th>\n",
       "      <th>Minimum</th>\n",
       "      <th>Maximum</th>\n",
       "      <th>Total Profit</th>\n",
       "      <th>Total Penalty</th>\n",
       "      <th>Net Profit</th>\n",
       "      <th>ratio</th>\n",
       "      <th>Optimal to process</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>124821</th>\n",
       "      <td>124822</td>\n",
       "      <td>1683.0</td>\n",
       "      <td>2103.75</td>\n",
       "      <td>6.00</td>\n",
       "      <td>1.75</td>\n",
       "      <td>10</td>\n",
       "      <td>1683</td>\n",
       "      <td>10098.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10098.00</td>\n",
       "      <td>0.937037</td>\n",
       "      <td>1683</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14594</th>\n",
       "      <td>14595</td>\n",
       "      <td>894.0</td>\n",
       "      <td>1117.50</td>\n",
       "      <td>6.00</td>\n",
       "      <td>1.75</td>\n",
       "      <td>10</td>\n",
       "      <td>894</td>\n",
       "      <td>5364.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5364.00</td>\n",
       "      <td>0.937037</td>\n",
       "      <td>894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136809</th>\n",
       "      <td>136810</td>\n",
       "      <td>1094.0</td>\n",
       "      <td>1367.50</td>\n",
       "      <td>6.00</td>\n",
       "      <td>1.75</td>\n",
       "      <td>10</td>\n",
       "      <td>1094</td>\n",
       "      <td>6564.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>6564.00</td>\n",
       "      <td>0.937037</td>\n",
       "      <td>1094</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102327</th>\n",
       "      <td>102328</td>\n",
       "      <td>1441.0</td>\n",
       "      <td>1801.25</td>\n",
       "      <td>6.00</td>\n",
       "      <td>1.74</td>\n",
       "      <td>10</td>\n",
       "      <td>1441</td>\n",
       "      <td>8646.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8646.00</td>\n",
       "      <td>0.936554</td>\n",
       "      <td>1441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30770</th>\n",
       "      <td>30771</td>\n",
       "      <td>1791.0</td>\n",
       "      <td>2238.75</td>\n",
       "      <td>6.00</td>\n",
       "      <td>1.74</td>\n",
       "      <td>10</td>\n",
       "      <td>1791</td>\n",
       "      <td>10746.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10746.00</td>\n",
       "      <td>0.936554</td>\n",
       "      <td>1791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19984</th>\n",
       "      <td>19985</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>4.01</td>\n",
       "      <td>0.75</td>\n",
       "      <td>10</td>\n",
       "      <td>927</td>\n",
       "      <td>40.1</td>\n",
       "      <td>687.75</td>\n",
       "      <td>-647.65</td>\n",
       "      <td>0.704051</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76999</th>\n",
       "      <td>77000</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>4.01</td>\n",
       "      <td>0.75</td>\n",
       "      <td>10</td>\n",
       "      <td>568</td>\n",
       "      <td>40.1</td>\n",
       "      <td>418.50</td>\n",
       "      <td>-378.40</td>\n",
       "      <td>0.704051</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11305</th>\n",
       "      <td>11306</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>4.01</td>\n",
       "      <td>0.75</td>\n",
       "      <td>10</td>\n",
       "      <td>1373</td>\n",
       "      <td>40.1</td>\n",
       "      <td>1022.25</td>\n",
       "      <td>-982.15</td>\n",
       "      <td>0.704051</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82401</th>\n",
       "      <td>82402</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>4.01</td>\n",
       "      <td>0.75</td>\n",
       "      <td>10</td>\n",
       "      <td>622</td>\n",
       "      <td>40.1</td>\n",
       "      <td>459.00</td>\n",
       "      <td>-418.90</td>\n",
       "      <td>0.704051</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21882</th>\n",
       "      <td>21883</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.50</td>\n",
       "      <td>4.01</td>\n",
       "      <td>0.75</td>\n",
       "      <td>10</td>\n",
       "      <td>962</td>\n",
       "      <td>40.1</td>\n",
       "      <td>714.00</td>\n",
       "      <td>-673.90</td>\n",
       "      <td>0.704051</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>150000 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Customer Number  Optimal number to process  Square footage utilized  \\\n",
       "124821           124822                     1683.0                  2103.75   \n",
       "14594             14595                      894.0                  1117.50   \n",
       "136809           136810                     1094.0                  1367.50   \n",
       "102327           102328                     1441.0                  1801.25   \n",
       "30770             30771                     1791.0                  2238.75   \n",
       "...                 ...                        ...                      ...   \n",
       "19984             19985                       10.0                    12.50   \n",
       "76999             77000                       10.0                    12.50   \n",
       "11305             11306                       10.0                    12.50   \n",
       "82401             82402                       10.0                    12.50   \n",
       "21882             21883                       10.0                    12.50   \n",
       "\n",
       "        Profit  Penalty  Minimum  Maximum  Total Profit  Total Penalty  \\\n",
       "124821    6.00     1.75       10     1683       10098.0           0.00   \n",
       "14594     6.00     1.75       10      894        5364.0           0.00   \n",
       "136809    6.00     1.75       10     1094        6564.0           0.00   \n",
       "102327    6.00     1.74       10     1441        8646.0           0.00   \n",
       "30770     6.00     1.74       10     1791       10746.0           0.00   \n",
       "...        ...      ...      ...      ...           ...            ...   \n",
       "19984     4.01     0.75       10      927          40.1         687.75   \n",
       "76999     4.01     0.75       10      568          40.1         418.50   \n",
       "11305     4.01     0.75       10     1373          40.1        1022.25   \n",
       "82401     4.01     0.75       10      622          40.1         459.00   \n",
       "21882     4.01     0.75       10      962          40.1         714.00   \n",
       "\n",
       "        Net Profit     ratio  Optimal to process  \n",
       "124821    10098.00  0.937037                1683  \n",
       "14594      5364.00  0.937037                 894  \n",
       "136809     6564.00  0.937037                1094  \n",
       "102327     8646.00  0.936554                1441  \n",
       "30770     10746.00  0.936554                1791  \n",
       "...            ...       ...                 ...  \n",
       "19984      -647.65  0.704051                  10  \n",
       "76999      -378.40  0.704051                  10  \n",
       "11305      -982.15  0.704051                  10  \n",
       "82401      -418.90  0.704051                  10  \n",
       "21882      -673.90  0.704051                  10  \n",
       "\n",
       "[150000 rows x 12 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "de734ecf",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
